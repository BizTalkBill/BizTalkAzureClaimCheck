{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AzureClaimCheck.Environment.Prefix": {
      "defaultValue": "dev",
      "type": "String",
      "allowedValues": [
        "dev",
        "stg",
        "prd"
      ]
    },
    "AzureClaimCheck.Location": {
      "type": "string",
      "defaultValue": "australiasoutheast",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the deployment."
      }
    },
    "BaseName": {
      "defaultValue": "AzureClaimCheckDemo",
      "type": "string"
    },
    //"Client1Name": {
    //  "defaultValue": "Client1",
    //  "type": "string"
    //},
    //"Message1Name": {
    //  "defaultValue": "Message1",
    //  "type": "string"
    //},
    //"Message2Name": {
    //  "defaultValue": "Message2",
    //  "type": "string"
    //},
    //"Message3Name": {
    //  "defaultValue": "Message3",
    //  "type": "string"
    //},
    "ServicePrincipalObjectId": {
      "defaultValue": "c29da76f-0e5c-41a9-8ec7-84dbd6b28033",
      "type": "string"
    },
    "UserObjectId": {
      "defaultValue": "5eb0bb66-ca79-4e8f-bb17-ae8d1c579644",
      "type": "string"
    }
  },
  "variables": {
    "KeyVaultName": "[concat(toLower(parameters('AzureClaimCheck.Environment.Prefix')), parameters('BaseName'))]",
    "IntegrationAccountName": "[concat(toLower(parameters('AzureClaimCheck.Environment.Prefix')), parameters('BaseName'))]",
    "ServiceBusNamespace": "[concat(toLower(parameters('AzureClaimCheck.Environment.Prefix')), parameters('BaseName'))]",
    "StorageAccountName": "[concat(toLower(parameters('AzureClaimCheck.Environment.Prefix')), toLower(parameters('BaseName')))]",
    "Client1Name": "Client1",
    "Message1Name": "Message1",
    "Message2Name": "Message2",
    "Message3Name": "Message3"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('KeyVaultName')]",
      "apiVersion": "2016-10-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "tags": {},
      "scale": null,
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('UserObjectId')]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('ServicePrincipalObjectId')]",
            "permissions": {
              "keys": [],
              "secrets": [
                "Get"
              ],
              "certificates": []
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Logic/integrationAccounts",
      "sku": {
        "name": "Free"
      },
      "name": "[variables('IntegrationAccountName')]",
      "apiVersion": "2016-06-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "name": "[variables('ServiceBusNamespace')]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "tags": {},
      "scale": null,
      "properties": {
        "provisioningState": "Succeeded",
        "metricId": "[concat(subscription().subscriptionId,':',resourceGroup().Name, variables('ServiceBusNamespace'))]",
        "createdAt": "2018-06-20T04:31:30.003Z",
        "updatedAt": "2018-07-03T06:19:55.217Z",
        "serviceBusEndpoint": "[concat('https://', variables('ServiceBusNamespace'),'.servicebus.windows.net:443/')]",
        "status": "Active"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "name": "[variables('StorageAccountName')]",
      "apiVersion": "2018-03-01-preview",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-03-01-preview",
      "name": "[concat(variables('StorageAccountName'), '/default/archive')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-03-01-preview",
      "name": "[concat(variables('StorageAccountName'), '/default/frombiztalk')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-03-01-preview",
      "name": "[concat(variables('StorageAccountName'), '/default/tobiztalk')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/', concat(variables('Client1Name'), variables('Message1Name'), 'StorageKey'))]",
      "apiVersion": "2016-10-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/', concat(variables('Client1Name'), variables('Message2Name'), 'StorageKey'))]",
      "apiVersion": "2016-10-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/', concat(variables('Client1Name'), 'StorageKey'))]",
      "apiVersion": "2016-10-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
      "name": "[concat(variables('ServiceBusNamespace'), '/RootManageSharedAccessKey')]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "name": "[concat(variables('ServiceBusNamespace'), '/toBiztalk')]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "lockDuration": "PT30S",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "requiresSession": false,
        "defaultMessageTimeToLive": "P14D",
        "deadLetteringOnMessageExpiration": false,
        "enableBatchedOperations": true,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "maxDeliveryCount": 10,
        "status": "Active",
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "enablePartitioning": false,
        "enableExpress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk')]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "defaultMessageTimeToLive": "P14D",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "enableBatchedOperations": true,
        "status": "Active",
        "supportOrdering": true,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "enablePartitioning": false,
        "enableExpress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk/', variables('Client1Name'))]",
      "apiVersion": "2017-04-01",
      "location": "Australia Southeast",
      "scale": null,
      "properties": {
        "lockDuration": "PT1M",
        "requiresSession": false,
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "deadLetteringOnMessageExpiration": false,
        "deadLetteringOnFilterEvaluationExceptions": true,
        "maxDeliveryCount": 10,
        "status": "Active",
        "enableBatchedOperations": true,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk', '/', variables('Client1Name'), variables('Message1Name'))]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "lockDuration": "PT1M",
        "requiresSession": false,
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "deadLetteringOnMessageExpiration": false,
        "deadLetteringOnFilterEvaluationExceptions": true,
        "maxDeliveryCount": 10,
        "status": "Active",
        "enableBatchedOperations": true,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk', '/', variables('Client1Name'), variables('Message2Name'))]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "lockDuration": "PT1M",
        "requiresSession": false,
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "deadLetteringOnMessageExpiration": false,
        "deadLetteringOnFilterEvaluationExceptions": true,
        "maxDeliveryCount": 10,
        "status": "Active",
        "enableBatchedOperations": true,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk', '/', variables('Client1Name'), variables('Message3Name'))]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "lockDuration": "PT1M",
        "requiresSession": false,
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "deadLetteringOnMessageExpiration": false,
        "deadLetteringOnFilterEvaluationExceptions": true,
        "maxDeliveryCount": 10,
        "status": "Active",
        "enableBatchedOperations": true,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk', '/', variables('Client1Name'), '/', variables('Client1Name'))]",
      "apiVersion": "2017-04-01",
      "location": "[parameters('AzureClaimCheck.Location')]",
      "scale": null,
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "[concat('ClientId = ''', variables('Client1Name'), '''')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', variables('ServiceBusNamespace'), 'fromBiztalk', variables('Client1Name'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk', '/', variables('Client1Name'), variables('Message1Name'), '/', variables('Client1Name'), variables('Message1Name'))]",
      "apiVersion": "2017-04-01",
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "[concat('ClientId = ''', variables('Client1Name'), ''' and MessageTypeId = ''', variables('Message1Name'), '''')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', variables('ServiceBusNamespace'), 'fromBiztalk', concat(variables('Client1Name'), variables('Message1Name')))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk', '/', variables('Client1Name'), variables('Message2Name'), '/', variables('Client1Name'), variables('Message2Name'))]",
      "apiVersion": "2017-04-01",
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "[concat('ClientId = ''', variables('Client1Name'), ''' and MessageTypeId = ''', variables('Message2Name'), '''')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', variables('ServiceBusNamespace'), 'fromBiztalk', concat(variables('Client1Name'), variables('Message2Name')))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "name": "[concat(variables('ServiceBusNamespace'), '/fromBiztalk', '/', variables('Client1Name'), variables('Message3Name'), '/', variables('Client1Name'), variables('Message3Name'))]",
      "apiVersion": "2017-04-01",
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "[concat('ClientId = ''', variables('Client1Name'), ''' and MessageTypeId = ''', variables('Message3Name'), '''')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('ServiceBusNamespace'), 'fromBiztalk')]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', variables('ServiceBusNamespace'), 'fromBiztalk', concat(variables('Client1Name'), variables('Message3Name')))]"
      ]
    }
  ],
  "outputs": {}
}
